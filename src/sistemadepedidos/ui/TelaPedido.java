/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistemadepedidos.ui;

import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import sistemadepedidos.app.ClienteApp;
import sistemadepedidos.app.PedidoApp;
import sistemadepedidos.app.ProdutoApp;
import sistemadepedidos.dominio.Cliente;
import sistemadepedidos.dominio.ItemPedido;
import sistemadepedidos.dominio.Pedido;
import sistemadepedidos.dominio.Produto;

/**
 *
 * @author LuizRicardo
 */
public class TelaPedido extends javax.swing.JInternalFrame {

    //Criar Table Model dos Produtos
    DefaultTableModel produtosTableModel = new DefaultTableModel(new Object[][]{}, new String[]{"Código", "Produto", "Quant.", "Vl.Unit", "Vl. Total"}) {
        
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };

    //Criar Table Model do Pedido
    DefaultTableModel pedidosTableModel = new DefaultTableModel(new Object[][]{}, new String[]{"Número", "Cliente", "Data", "Valor"}) {
        
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };

    //Método que popula o TableModel
    public void PopularTableModel() {
        //Instanciar a aplicação dos Pedidos
        PedidoApp pedidoApp = new PedidoApp();

        //Limpar as linhas do TableMOdel
        for (int i = pedidosTableModel.getRowCount() - 1; i > -1; i--) {
            pedidosTableModel.removeRow(i);
        }

        //Criar o SimpleDateFormat
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");

        //Popular o TableModel
        for (Pedido p : pedidoApp.Listar()) {
            pedidosTableModel.addRow(new Object[]{
                p.getNumero(),
                p.getCliente().getNome(),
                sdf.format(p.getData()),
                String.valueOf(p.getValorTotal()).replace(".", ",")
            });
        }
    }
    
    public List<ItemPedido> itensPedido = new ArrayList<>();
    
    public void PopularTableModelProdutos() {
        //Limpar as linhas do TableModel
        for (int i = produtosTableModel.getRowCount() - 1; i > -1; i--) {
            produtosTableModel.removeRow(i);
        }

        //Popular o TableModel
        for (ItemPedido item : itensPedido) {
            produtosTableModel.addRow(new Object[]{
                String.valueOf(item.getProduto().getCodigo()),
                item.getProduto().getDescricao(),
                String.valueOf(item.getQuant()).replace(".", ","),
                String.valueOf(item.getVlUnit()).replace(".", ","),
                String.valueOf(item.getVlTotal()).replace(".", ",")
            });
        }
    }

    /**
     * Creates new form Pedido
     */
    public TelaPedido() {
        initComponents();

        //Preencher a Data Atual
        SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");

        //Preencher a DataAtual
        txtData.setText(df.format(new Date()));

        //Preencher Cliente
        //Instanciar a aplicação do cliente
        ClienteApp clienteApp = new ClienteApp();

        //Limpar o Combobox
        cbCliente.removeAllItems();

        //Adicionar item de seleção
        cbCliente.addItem("--Selecione--");

        //Percorrer os clientes
        for (Cliente c : clienteApp.Listar()) {
            cbCliente.addItem(c.getNome());
        }

        //Refresh na tela
        cbCliente.updateUI();

        //Preencher Produto
        //Instanciar a aplicação do Produto
        ProdutoApp produtoApp = new ProdutoApp();

        //Limpar o Combobox
        cbProduto.removeAllItems();

        //Adicionar item de seleção
        cbProduto.addItem("--Selecione--");

        //Percorrer os clientes
        for (Produto p : produtoApp.Listar()) {
            cbProduto.addItem(p.getDescricao());
        }

        //Refresh na tela
        cbProduto.updateUI();

        //Popular a TableModel
        PopularTableModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cbCliente = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        txtData = new javax.swing.JFormattedTextField();
        lblCodigoCli = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNum = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        cbProduto = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtVlUnit = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        txtVlTotal = new javax.swing.JFormattedTextField();
        btnAdicionar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtTotalGeral = new javax.swing.JFormattedTextField();
        lblCodigoProd = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtQuant = new javax.swing.JFormattedTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        tabProdutos = new javax.swing.JTable();
        btnSalvar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabPedidos = new javax.swing.JTable();
        btnNovo = new javax.swing.JButton();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Pedido");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados do Pedido"));

        jLabel1.setText("Cliente");

        cbCliente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbClienteActionPerformed(evt);
            }
        });

        jLabel3.setText("Data");

        try {
            txtData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        lblCodigoCli.setText("0");

        jLabel2.setText("Código");

        txtNum.setEditable(false);

        jLabel10.setText("Número");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(txtNum, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCodigoCli, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbCliente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCodigoCli)
                            .addComponent(cbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(16, 16, 16))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Produtos"));

        jLabel4.setText("Produto");

        cbProduto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbProdutoActionPerformed(evt);
            }
        });

        jLabel5.setText("Quant.");

        jLabel6.setText("Vl. Unitário");

        txtVlUnit.setEditable(false);
        txtVlUnit.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.##"))));
        txtVlUnit.setText("0,00");

        jLabel7.setText("Vl. Total");

        txtVlTotal.setEditable(false);
        txtVlTotal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.##"))));
        txtVlTotal.setText("0,00");

        btnAdicionar.setText("Adicionar");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("Total Geral:");

        txtTotalGeral.setEditable(false);
        txtTotalGeral.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.##"))));
        txtTotalGeral.setText("0,00");
        txtTotalGeral.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        lblCodigoProd.setText("0");

        jLabel9.setText("Código");

        txtQuant.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.##"))));
        txtQuant.setText("1");
        txtQuant.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtQuantFocusLost(evt);
            }
        });

        tabProdutos.setModel(produtosTableModel);
        tabProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabProdutosMouseClicked(evt);
            }
        });
        tabProdutos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tabProdutosKeyPressed(evt);
            }
        });
        jScrollPane5.setViewportView(tabProdutos);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblCodigoProd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(cbProduto, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(txtQuant, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(txtVlUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txtVlTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTotalGeral, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 565, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCodigoProd)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtVlTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnAdicionar)
                        .addComponent(cbProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtQuant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtVlUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTotalGeral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addContainerGap())
        );

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        tabPedidos.setModel(pedidosTableModel);
        tabPedidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabPedidosMouseClicked(evt);
            }
        });
        tabPedidos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tabPedidosKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(tabPedidos);

        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSalvar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNovo))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnNovo, btnSalvar});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar)
                    .addComponent(btnNovo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        if (cbProduto.getSelectedItem().toString().equals("--Selecione--")) {
            JOptionPane.showMessageDialog(null, "Selecione um Porduto.", "Erro", JOptionPane.ERROR_MESSAGE);
        } else {
            //Criar o item
            ItemPedido item = new ItemPedido();

            //Instanciar a aplicação do Produto
            ProdutoApp produtoApp = new ProdutoApp();

            //Preencher o item do pedido
            item.setProduto(produtoApp.Encontrar(Integer.parseInt(lblCodigoProd.getText())));
            item.setQuant(Double.parseDouble(txtQuant.getText().replace(",", ".")));
            item.setVlUnit(Double.parseDouble(txtVlUnit.getText().replace(",", ".")));
            item.setVlTotal(Double.parseDouble(txtVlTotal.getText().replace(",", ".")));

            //Adicionar o item    
            itensPedido.add(item);

            //Popular a Table Model
            PopularTableModelProdutos();

            //Calcular o Valor Total
            txtTotalGeral.setText(String.format("%.2f", CalcularTotalGeral(item.getVlTotal(), TipoCalculo.SOMAR)));

            //Limpar o item
            LimparItem();
        }
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        //Limpar os Texts
        LimparTexts();

        //Definir o foco no combo do cliente
        cbCliente.requestFocus();
    }//GEN-LAST:event_btnNovoActionPerformed

    private void cbClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbClienteActionPerformed
        try {
            if (!cbCliente.getSelectedItem().equals("--Selecione--")) {
                //Instanciar a aplicação do Cliente
                ClienteApp clienteApp = new ClienteApp();

                //Obter o cliente
                Cliente cliente = clienteApp.Encontrar(cbCliente.getSelectedItem().toString());

                //Preencher o Código
                lblCodigoCli.setText(String.valueOf(cliente.getCodigo()));
            } else {
                //Preencher o Código
                lblCodigoCli.setText("0");
            }
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_cbClienteActionPerformed

    private void cbProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbProdutoActionPerformed
        try {
            if (!cbProduto.getSelectedItem().equals("--Selecione--")) {
                //Instanciar a aplicação do Produto
                ProdutoApp produtoApp = new ProdutoApp();

                //Obter o Produto
                Produto produto = produtoApp.Encontrar(cbProduto.getSelectedItem().toString());

                //Preencher o Código
                lblCodigoProd.setText(String.valueOf(produto.getCodigo()));

                //Preencher o Valor Unitário
                txtVlUnit.setText(String.format("%.2f", produto.getPreco()));

                //Preencher o Valor Total
                txtVlTotal.setText(String.format("%.2f", CalcularVlTotalItem()));
            } else {
                //Preencher o Código
                lblCodigoProd.setText("0");

                //Preencher o Valor Unitário
                txtVlUnit.setText("0,00");

                //Preencher o Valor Total
                txtVlTotal.setText("0,00");
            }
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_cbProdutoActionPerformed

    private void txtQuantFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtQuantFocusLost
        txtVlTotal.setText(String.format("%.2f", CalcularVlTotalItem()));
    }//GEN-LAST:event_txtQuantFocusLost

    private void tabProdutosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabProdutosKeyPressed
        try {
            //Verificar se o DELETE foi pressionado
            if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
                //Obter o item do pedido
                ItemPedido item = itensPedido.get(tabProdutos.getSelectedRow());

                //Calcular o Valor Total
                txtTotalGeral.setText(String.format("%.2f", CalcularTotalGeral(item.getVlTotal(), TipoCalculo.SUBTRAIR)));

                //Remover item do PordutosTableModel
                itensPedido.remove(item);

                //Atualizar o table Model
                PopularTableModelProdutos();
            }
        } catch (ArrayIndexOutOfBoundsException aioobe) {
            
        }
    }//GEN-LAST:event_tabProdutosKeyPressed

    private void tabProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabProdutosMouseClicked
        try {
            //Verificar se é duplo clique
            if (evt.getClickCount() == 2) {
                //Obter o item do pedido
                ItemPedido item = itensPedido.get(tabProdutos.getSelectedRow());

                //Calcular o Valor Total
                txtTotalGeral.setText(String.format("%.2f", CalcularTotalGeral(item.getVlTotal(), TipoCalculo.SUBTRAIR)));

                //Remover item do PordutosTableModel
                itensPedido.remove(item);

                //Atualizar o table Model
                PopularTableModelProdutos();

                //Preencher os Valores
                lblCodigoProd.setText(String.valueOf(item.getProduto().getCodigo()));
                cbProduto.setSelectedItem(String.valueOf(item.getProduto().getDescricao()));
                txtQuant.setText(String.valueOf(item.getQuant()).replace(".", ","));
                txtVlUnit.setText(String.valueOf(item.getVlUnit()).replace(".", ","));
                txtVlTotal.setText(String.valueOf(item.getVlTotal()).replace(".", ","));
            }
        } catch (ArrayIndexOutOfBoundsException aioobe) {
            
        }
    }//GEN-LAST:event_tabProdutosMouseClicked

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        try {
            //Instanciar a aplicação do Cliente
            ClienteApp clienteApp = new ClienteApp();

            //Instanciar a aplicação do Produto
            ProdutoApp produtoApp = new ProdutoApp();

            //Instanciar aplicação do Pedido
            PedidoApp pedidoApp = new PedidoApp();

            //Instanciar um novo Pedido
            Pedido pedido = new Pedido();

            //Criar um DateFormat
            SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");

            //Criar Date
            Date data = df.parse(txtData.getText());

            //Preencher o Pedido
            pedido.setCliente(clienteApp.Encontrar(Integer.parseInt(lblCodigoCli.getText())));
            pedido.setData(data);
            pedido.setValorTotal(totalGeral);
            pedido.setItensPedido(itensPedido);

            //Verificar se cria ou edita
            if (txtNum.getText().equals("")) {
                //Criar o Pedido
                pedidoApp.Criar(pedido);
            } else {
                //Preencher o número
                pedido.setNumero(Integer.parseInt(txtNum.getText()));

                //Editar o pedido
                pedidoApp.Editar(pedido);
            }

            //Mostrar mensagem de confirmação
            JOptionPane.showMessageDialog(null, "Salvo com Sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);

            //Limpar os Texts
            LimparTexts();

            //Atualizar TableModel
            PopularTableModel();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void tabPedidosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabPedidosKeyPressed
        //Verificar se o DELETE foi pressionaod
        if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
            //Criar Mensagem de confirmação
            int dialogResult = JOptionPane.showConfirmDialog(null, "Deseja realmente remover este registro?", "Remoção", 0, JOptionPane.QUESTION_MESSAGE);

            //Caso seja clicado em SIM na mensagem
            if (dialogResult == JOptionPane.YES_OPTION) {
                //Instanciar a aplicação do Pedido
                PedidoApp pedidoApp = new PedidoApp();

                //Pegar codigo da linha da Jtable
                int codigo = (int) tabPedidos.getValueAt(tabPedidos.getSelectedRow(), 0);

                //Remover o registro
                pedidoApp.Remover(codigo);

                //Mostrar mensagem de confirmação
                JOptionPane.showMessageDialog(null, "Removido com Sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);

                //Limpar os Texts
                LimparTexts();

                //Atualizar TableModel
                PopularTableModel();
            }
        }
    }//GEN-LAST:event_tabPedidosKeyPressed

    private void tabPedidosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabPedidosMouseClicked
//Verificar se é duplo clique
        if (evt.getClickCount() == 2) {
            //Instanciar a aplicação do Pedido
            PedidoApp pedidoApp = new PedidoApp();

            //Pegar codigo da linha da Jtable
            int codigo = (int) tabPedidos.getValueAt(tabPedidos.getSelectedRow(), 0);

            //Recuperar o Pedido
            Pedido pedido = pedidoApp.Encontrar(codigo);

            //Limpar os Texts
            LimparTexts();

            //Criar Simple Date Format
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");

            //Preencher os campos
            txtNum.setText(String.valueOf(pedido.getNumero()));
            lblCodigoCli.setText(String.valueOf(pedido.getCliente().getCodigo()));
            cbCliente.setSelectedItem(pedido.getCliente().getNome());
            txtData.setText(sdf.format(pedido.getData()));
            
            //Preencher o total geral
            totalGeral = pedido.getValorTotal();
            CalcularTotalGeral(totalGeral, TipoCalculo.SOMAR);
            
            //Preencher os itens do pedido
            itensPedido = pedido.getItensPedido();
            PopularTableModelProdutos();
        }
    }//GEN-LAST:event_tabPedidosMouseClicked

    /**
         * @param args the command line arguments
         */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPedido().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox cbCliente;
    private javax.swing.JComboBox cbProduto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblCodigoCli;
    private javax.swing.JLabel lblCodigoProd;
    private javax.swing.JTable tabPedidos;
    private javax.swing.JTable tabProdutos;
    private javax.swing.JFormattedTextField txtData;
    private javax.swing.JTextField txtNum;
    private javax.swing.JFormattedTextField txtQuant;
    private javax.swing.JFormattedTextField txtTotalGeral;
    private javax.swing.JFormattedTextField txtVlTotal;
    private javax.swing.JFormattedTextField txtVlUnit;
    // End of variables declaration//GEN-END:variables

    private double CalcularVlTotalItem() {
        double quant = 0;
        try {
            quant = Double.parseDouble(txtQuant.getText().replace(",", "."));
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(null, "A Quantidade é inválida.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
        
        double vlUnit = 0;
        try {
            vlUnit = Double.parseDouble(txtVlUnit.getText().replace(",", "."));
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(null, "O Valor Unitário é inválido.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
        
        return quant * vlUnit;
    }
    
    private void LimparItem() {
        //Limpar os textos do item
        lblCodigoProd.setText("0");
        cbProduto.setSelectedIndex(0);
        txtQuant.setText("1");
        txtVlUnit.setText("0,00");
        txtVlTotal.setText("0,00");
    }

    //Criar a Variável do Total Geral
    private double totalGeral = 0;
    
    private double CalcularTotalGeral(double valor, TipoCalculo tipo) {
        if (tipo == TipoCalculo.SOMAR) {
            totalGeral += valor;
        } else {
            totalGeral -= valor;
        }
        
        return totalGeral;
    }
    
    private void LimparTexts() {
        //Criar o SImple Date Forma
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");

        //Limpar os texts
        txtNum.setText("");
        lblCodigoCli.setText("0");
        cbCliente.setSelectedIndex(0);
        txtData.setText(sdf.format(new Date()));
        lblCodigoProd.setText("0");
        cbProduto.setSelectedIndex(0);
        txtQuant.setText("1");
        txtVlUnit.setText("0,00");
        txtVlTotal.setText("0,00");
        txtTotalGeral.setText("0,00");

        //Limpar os produtos
        itensPedido.removeAll(itensPedido);

        //Zerar o total geral
        totalGeral = 0;

        //Atualizar a table model
        PopularTableModelProdutos();
    }
    
    private enum TipoCalculo {
        
        SOMAR,
        SUBTRAIR
    }
}
